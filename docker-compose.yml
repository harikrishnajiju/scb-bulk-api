services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports: ["2181:2181"]

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on: [zookeeper]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      # Large file support
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 10485760
      KAFKA_NUM_PARTITIONS: 10
      KAFKA_LOG_RETENTION_HOURS: 168
    ports: ["9092:9092"]

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: banking_api
      POSTGRES_USER: banking_user
      POSTGRES_PASSWORD: banking_pass
    ports: ["5432:5432"]
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

  api-service:
    build: ./api-service
    ports: ["5000:5000"]
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      DATABASE_URL: postgresql://banking_user:banking_pass@postgres:5432/banking_api
      REDIS_URL: redis://redis:6379
      MAX_CHUNK_SIZE: 10000
      KAFKA_MAX_MESSAGE_SIZE: 900000
    depends_on: [kafka, postgres, redis]
    volumes:
      - ./api-service:/app
    restart: unless-stopped

  kong:
    image: kong:3.4
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_BUFFER_SIZE: 128k
      KONG_PROXY_BUFFERS: 8 128k
    ports: ["8000:8000", "8001:8001"]
    volumes:
      - ./docker/kong.yml:/kong/kong.yml
    depends_on: [api-service]

volumes:
  postgres_data: